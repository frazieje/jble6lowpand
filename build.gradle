apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 1.8

mainClassName = "com.spoohapps.jble6lowpand.ScanningDaemon"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://www.spoohapps.com/artifactory/libs-release-local"
        credentials {
            username = artifactory_username
            password = artifactory_password
        }
    }
}

distributions {
    main {
        contents {
            from { 'jni/libs' }
        }
    }
}

dependencies {
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-grizzly2-http', version: '2.27'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '2.27'

    compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.27'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    compile group: 'com.spoohapps', name: 'farcommon', version: '0.1.0'

    testCompile("junit:junit:4.12")
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.2")

    testRuntime("org.junit.platform:junit-platform-launcher:1.0.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.2")
    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.2")
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.spoohapps.jble6lowpand.controller.ScanningDaemonController'
        )
    }
}

task copyToLib(type: Copy) {
    into "$buildDir/output/libs"
    from configurations.runtime
}

task generateJniHeaders(type: Exec) {
    def classpath = sourceSets.main.runtimeClasspath.asPath
    commandLine "javah", "-d", "jni/src", "-classpath", classpath, "com.spoohapps.jble6lowpand.NativeBle6LowpanIpspService"
    dependsOn classes
}

build.dependsOn(copyToLib)

jar.dependsOn(generateJniHeaders)
